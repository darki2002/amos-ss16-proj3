version: '0.0.1-{build}'

clone_folder: c:\projects\ws-plugin

environment:
  CYG_ROOT: C:\cygwin64
#  var: value

# script after cloning repo:
install:
  - echo Install Script now!
  - cinst winflexbison
  #- choco install winflexbison

platform:
  - x64
  
before_build:
  #- echo %PATH%
  - set PATH=%PATH%;C:\cygwin64\bin\
  #- echo %PATH%
  - set PATH=C:\cygwin64\bin\;%PATH%
  #- echo %PATH%
  - echo before_build Script now!
  - mkdir c:\projects\wireshark
  - git clone https://github.com/wireshark/wireshark.git c:\projects\wireshark
  #- ps: Invoke-WebRequest -Uri https://2.na.dl.wireshark.org/src/wireshark-2.0.3.tar.bz2 -OutFile c:\projects\wireshark-2.0.3.tar.bz2
  #- cd c:\projects\ ..... TOTO manual download if needed
  #- 7z x wireshark-2.0.3.tar.bz2
  #7z x wireshark-2.0.3.tar
  #- dir c:\projects\wireshark
  #- echo nach dir
  - cmd: set CYGWIN=nodosfilewarning
  #- echo nach set cygwin
  - cmd: set WIRESHARK_BASE_DIR=c:\projects
  - cmd: set WIRESHARK_TARGET_PLATFORM=win64
  - cmd: set QT5_BASE_DIR=c:\Qt\5.6\msvc2013_64
  - cmd: set WIRESHARK_VERSION_EXTRA=-YourExtraVersionInfo
  - echo xcopy now
  - cmd: xcopy /E c:\projects\ws-plugin\src\plugins c:\projects\wireshark\plugins
  - cmd: copy /Y c:\projects\ws-plugin\CMakeLists.txt c:\projects\wireshark\CMakeLists.txt
  #- cmd: xcopy /E c:\projects\ws-plugin\CMakeOptions.txt c:\projects\wireshark /Y
  - echo nach xcopy
  - ps: Invoke-WebRequest -Uri https://cygwin.com/setup-x86_64.exe -OutFile c:\projects\cygwin-setup.exe
  - mkdir c:\projects\cyg-packages
  - c:\projects\cygwin-setup.exe -q -n -N -d -R C:\cygwin64 -s http://ftp.hawo.stw.uni-erlangen.de/cygwin/ -l c:\projects\cyg-packages -P  flex -P bison
  #- dir c:\projects\wireshark\plugins
  - cmd: '%CYG_ROOT%/bin/flex -V'
  - cmd: '%CYG_ROOT%/bin/bison --version'
  - cmd: set WIRESHARK_CYGWIN_INSTALL_PATH=C:\cygwin64
  

build_script:
  - echo Build Script now!
  - mkdir c:\projects\wiresharkBuild
  - cd  c:\projects\wiresharkBuild
  - cmake -DENABLE_CHM_GUIDES=on -G "Visual Studio 12 Win64" c:\projects\wireshark
  #- cmake -G "Visual Studio 12 Win64" c:\projects\wireshark\plugins\doip  ----------------------not working :(
  - dir c:\projects\wiresharkBuild\
  -  msbuild /m /p:Configuration=RelWithDebInfo c:\projects\wiresharkBuild\plugins\doip\doip.vcxproj
  #-  msbuild /verbosity:diag c:\projects\wiresharkBuild\plugins\doip\doip.vcxproj
  #- msbuild /m /p:Configuration=RelWithDebInfo Wireshark.sln
  #- dir
  #- dir plugins\doip

after_build:
  #- 7z a appveyor-build-folder.zip %APPVEYOR_BUILD_FOLDER%\
  #- 7z a wiresharkbuild.zip "c:\projects\wiresharkBuild"
  #- appveyor PushArtifact wiresharkbuild.zip
  #- appveyor PushArtifact appveyor-build-folder.zip
  - dir c:\projects\wiresharkBuild\run
  - 7z a run_folder.zip c:\projects\wiresharkBuild\run
  - appveyor PushArtifact run_folder.zip
  - appveyor PushArtifact "c:\projects\wiresharkBuild\run\Debug\plugins\doip.dll"

artifacts:
  - path: myapp.zip
    name: MyApp
    
on_failure:
  #- dir c:\projects\wiresharkBuild\plugins
  #- dir c:\projects\wiresharkBuild\plugins\gryphon
  #- msbuild /verbosity:diag c:\projects\wiresharkBuild\plugins\doip\doip.vcxproj
  - echo FAILURE warum nur.... aber mal versuchen das Plugin zu pushen:
  - appveyor PushArtifact "c:\projects\wiresharkBuild\run\Debug\plugins\doip.dll"
  #- 7z a myapp.zip c:\projects\wireshark\CMakeFiles\ "C:\Program Files (x86)\CMake\share\cmake-3.5\Modules\FindPackageHandleStandardArgs.cmake"
  #- appveyor PushArtifact myapp.zip
